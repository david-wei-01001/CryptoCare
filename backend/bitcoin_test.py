import requests


def lnd_new_address():
    headers={
        "Grpc-Metadata-Macaroon": '0201036c6e6402f801030a105547e6aef8d75ed6bad06b59a99d5d731201301a160a0761646472657373120472656164120577726974651a130a04696e666f120472656164120577726974651a170a08696e766f69636573120472656164120577726974651a210a086d616361726f6f6e120867656e6572617465120472656164120577726974651a160a076d657373616765120472656164120577726974651a170a086f6666636861696e120472656164120577726974651a160a076f6e636861696e120472656164120577726974651a140a057065657273120472656164120577726974651a180a067369676e6572120867656e657261746512047265616400000620dbb354ad9f8a2bffcf835c5218989f1638435cf571df470c347674d1366627ca',
        "Accept": "application/json",

    }
    url = "https://charity.u.voltageapp.io:8080/v1/newaddress"
    response = requests.get(url, headers=headers)
    return response.json()

# Example usage:
# new_address_response = lnd_new_address()
# print(new_address_response)

def lnd_get_wallet_balance():
    headers={
        "Grpc-Metadata-Macaroon": '0201036c6e6402f801030a105547e6aef8d75ed6bad06b59a99d5d731201301a160a0761646472657373120472656164120577726974651a130a04696e666f120472656164120577726974651a170a08696e766f69636573120472656164120577726974651a210a086d616361726f6f6e120867656e6572617465120472656164120577726974651a160a076d657373616765120472656164120577726974651a170a086f6666636861696e120472656164120577726974651a160a076f6e636861696e120472656164120577726974651a140a057065657273120472656164120577726974651a180a067369676e6572120867656e657261746512047265616400000620dbb354ad9f8a2bffcf835c5218989f1638435cf571df470c347674d1366627ca',
        "Accept": "application/json",

    }
    url = "https://charity.u.voltageapp.io:8080/v1/balance/blockchain"
    response = requests.get(url, headers=headers)
    return response.json()

# Example usage:
# wallet_balance_response = lnd_get_wallet_balance()
# print(wallet_balance_response)

def lnd_create_invoice(amount):
    headers={
        "Grpc-Metadata-Macaroon": '0201036c6e6402f801030a105547e6aef8d75ed6bad06b59a99d5d731201301a160a0761646472657373120472656164120577726974651a130a04696e666f120472656164120577726974651a170a08696e766f69636573120472656164120577726974651a210a086d616361726f6f6e120867656e6572617465120472656164120577726974651a160a076d657373616765120472656164120577726974651a170a086f6666636861696e120472656164120577726974651a160a076f6e636861696e120472656164120577726974651a140a057065657273120472656164120577726974651a180a067369676e6572120867656e657261746512047265616400000620dbb354ad9f8a2bffcf835c5218989f1638435cf571df470c347674d1366627ca',
        "Accept": "application/json",
    }
    url = "https://charity.u.voltageapp.io:8080/v1/invoices"
    payload = {
        "value": amount,
        "memo": "for charity"
    }
    response = requests.post(url, headers=headers, json=payload)
    return response.json()

# Example usage:
# invoice_response = lnd_create_invoice(1000, "Payment for testing")
# print(invoice_response)

def lnd_list_invoices():
    headers={
        "Grpc-Metadata-Macaroon": '0201036c6e6402f801030a105547e6aef8d75ed6bad06b59a99d5d731201301a160a0761646472657373120472656164120577726974651a130a04696e666f120472656164120577726974651a170a08696e766f69636573120472656164120577726974651a210a086d616361726f6f6e120867656e6572617465120472656164120577726974651a160a076d657373616765120472656164120577726974651a170a086f6666636861696e120472656164120577726974651a160a076f6e636861696e120472656164120577726974651a140a057065657273120472656164120577726974651a180a067369676e6572120867656e657261746512047265616400000620dbb354ad9f8a2bffcf835c5218989f1638435cf571df470c347674d1366627ca',
        "Accept": "application/json",
    }
    url = "https://charity.u.voltageapp.io:8080/v1/invoices"
    response = requests.get(url, headers=headers)
    return response.json()

# Example usage:
list_invoices_response = lnd_list_invoices()
print(list_invoices_response)